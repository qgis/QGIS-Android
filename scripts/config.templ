#!/bin/bash

#   ***************************************************************************
#     config.conf - configuration template for android QGIS
#      --------------------------------------
#      Date                 : 01-Jun-2011
#      Copyright            : (C) 2011 by Marco Bernasocchi
#      Email                : marco at bernawebdesign.ch
#   ***************************************************************************
#   *                                                                         *
#   *   This program is free software; you can redistribute it and/or modify  *
#   *   it under the terms of the GNU General Public License as published by  *
#   *   the Free Software Foundation; either version 2 of the License, or     *
#   *   (at your option) any later version.                                   *
#   *                                                                         *
#   ***************************************************************************/

echo ""
set -e
#######check if config was already loaded#######
if [ ! -n "${QGIS_ANDROID_CONF_LOADED+x}" ]; then

  #############################
  ###### CONFIGURE HERE #######
  #############################
  
  ############################
  # PATHS
  export QGIS_DIR=$HOME/dev/QGIS  # cloned QGIS repo
  export QT_ROOT=$HOME/dev/Qt5.3.1/5.3/android_armv7 # downloaded Qt
  export ANDROID_SDK_ROOT=$HOME/dev/android-sdk-linux # downloaded SDK
  export ANDROID_NDK_ROOT=$HOME/dev/android-ndk-r10 # downloaded NDK
  export ANDROID_STANDALONE_TOOLCHAIN=$HOME/dev/android-ndk-r10-standalonetoolchain # path where the toolchain will be created

  # WARNING: armeabi-v7a builds don't work on android emulators pre api 14
  DEFAULT_ANDROID_ABI=armeabi-v7a #or armeabi
  # passing ANDROID_ABI=armeabi-v7a when calling a script will override the default
  # for example ANDROID_ABI=armeabi-v7a ./build-all.sh
  #  Possible values:
  #    ANDROID_ABI : "armeabi-v7a", "armeabi", "armeabi-v7a with NEON", "armeabi-v7a with VFPV3", "armeabi-v6 with VFP", "x86", "mips"
  # WARNING tested only with "armeabi-v7a", "armeabi"
  # TODO somehow support ANDROID_ABI with spaces in names since $ANDROID_ABI is used often in mkdir
  # see ascripts/android.toolchain.cmake for details 

  ############################
  # GIT
  export QGIS_ANDROID_BRANCH='qt5'
  
  ############################
  # COMPILE
  # passing BUILD_TYPE=Release when calling a script overrides the default (e.g. BUILD_TYPE=Release ./build-all.sh)
  DEFAULT_BUILD_TYPE=Debug # or Release
  #build python bindings
  WITH_BINDINGS=FALSE
  #which GUI should be build, both can be true  
  export WITH_MOBILE=FALSE
  export WITH_DESKTOP=TRUE
  
  ############################
  # LIBS VERSIONS
  export FREEXL_NAME=freexl-1.0.0e
  export SPATIALITE_NAME=libspatialite-4.1.1
  export EXPAT_NAME=expat-2.0.1
  export EXPAT_VERSION=2.0.1
  export GEOS_NAME=geos-3.4.2
  export GSL_NAME=gsl-1.14
  export GDAL_NAME=gdal-1.10.1
  export GDAL_DOWNLOAD_FOLDER=1.10.1
  export PROJ_NAME=proj-4.9.0
  export PROJ_DOWNLOAD_NAME=proj-4.9.0b2
  export SPATIALINDEX_NAME=spatialindex-src-1.7.1
  export SQLITE_NAME=sqlite-autoconf-3080002
  export QWT_NAME=qwt-6.1.0
  export QWT_VERSION=6.1.0
  export QWTPOLAR_NAME=qwtpolar-1.1.0
  export QWTPOLAR_VERSION=1.1.0
  export ICONV_NAME=libiconv-1.13.1
  export PQ_NAME=postgresql-9.0.4
  export PQ_VERSION=9.0.4

  
  ################################################
  ######LIKELY UNNEEDED TO CONFIGURE FURTHER######
  ################################################
   if [ ! -n "${ROOT_DIR+x}" ]; then
    export ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"
  fi
  if [ ! -n "${ANDROID_ABI+x}" ]; then
    export ANDROID_ABI=$DEFAULT_ANDROID_ABI
  fi
  if [ ! -n "${BUILD_TYPE+x}" ]; then
    export BUILD_TYPE=$DEFAULT_BUILD_TYPE
  fi
  
  export ADB=$ANDROID_SDK_ROOT/platform-tools/adb
  export QGIS_BUILD_DIR=$QGIS_DIR/build-$BUILD_TYPE-$ANDROID_ABI
  export INSTALL_DIR=$ROOT_DIR/out/$BUILD_TYPE/$ANDROID_ABI
  export SCRIPT_DIR=$ROOT_DIR/scripts
  export PATCH_DIR=$ROOT_DIR/patches
  export SRC_DIR=$ROOT_DIR/src
  export TMP_DIR=$ROOT_DIR/tmp
  export ANDROID_LEVEL=14
  export ANDROID_NDK_PLATFORM=android-$ANDROID_LEVEL
  export ANDROID_NDK_HOST=linux-x86
  export ANDROID_NDK_TOOLCHAIN_PREFIX=arm-linux-androideabi
  if [ ! -n "${ANDROID_NDK_TOOLCHAIN_VERSION+x}" ]; then
    export ANDROID_NDK_TOOLCHAIN_VERSION=4.8
  fi
#  export QT_SRC=$NECESSITAS_DIR/Android/Qt/480/qt-src
  export QT_INCLUDE=$QT_ROOT/include
  export QMAKE=$QT_ROOT/bin/qmake
  export APK_DIR=$ROOT_DIR/apk
  export GDB_SERVER=$ANDROID_NDK_ROOT/prebuilt/android-arm/gdbserver/gdbserver
  
  #setting compilers names
  #see https://groups.google.com/forum/?hl=en#!topic/android-ndk/DVNS_mQHxdA
  export PATH=$ANDROID_STANDALONE_TOOLCHAIN/bin:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH
  export CC=arm-linux-androideabi-gcc
  export CXX=arm-linux-androideabi-g++
  export LD=arm-linux-androideabi-ld
  export AR=arm-linux-androideabi-ar
  export RANLIB=arm-linux-androideabi-ranlib
  export AS=arm-linux-androideabi-as

  export MY_STD_CONFIGURE_FLAGS="--prefix=$INSTALL_DIR --host=arm-linux-androideabi"
  #FPU (floating point unit)FLAG:
  #see http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/ARM-Options.html
  #see http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0408f/index.html
  #see NDK docs/STANDALONE-TOOLCHAIN.html
  #for generic MY_FPU=vfp
  MY_FPU=vfp
  #for tegra processors (xoom, transformer, iconia, galaxy tab)
  #MY_FPU=vfpv3-d16
  #for hummingbird and neon supporting processors (galaxy phone) -mfpu=neon
  #MY_FPU=neon
  if [ "$ANDROID_ABI" = "armeabi-v7a with VFPV3" ]; then
    MY_FPU=vfpv3
  elif [ "$ANDROID_ABI" = "armeabi-v7a with NEON" ]; then
    MY_FPU=neon
  fi
  ARMV7A_flags=" -march=armv7-a -mfloat-abi=softfp -mfpu=$MY_FPU"

  #build mthumb instructions only in non Debug mode
  if [ "$BUILD_TYPE" = "Debug" ]; then
     extraFlags="-g -O0 -marm -finline-limit=300 -fno-strict-aliasing -fno-omit-frame-pointer -DDEBUG -D_DEBUG"
  else
     extraFlags="-mthumb -O2"
  fi
  
  #-std=gnu99: http://comments.gmane.org/gmane.comp.handhelds.android.ndk/8732
  #-std=c99: http://stackoverflow.com/questions/9247151/compiling-icu-for-android-uint64-t-does-not-name-a-type
  #http://stackoverflow.com/questions/5135734/whats-the-difference-in-gcc-between-std-gnu0x-and-std-c0x-and-which-one-s
  export MY_STD_CFLAGS="-DANDROID -Wno-psabi -std=c99 $extraFlags"
  if [ "$ANDROID_ABI" = "armeabi-v7a" ]; then
    export MY_STD_CFLAGS=$MY_STD_CFLAGS$ARMV7A_flags
  fi
  export MY_STD_CXXFLAGS="-DANDROID -Wno-psabi -std=gnu++0x $extraFlags"
  export MY_STD_LDFLAGS="-Wl,--fix-cortex-a8"

  #############################
  #######END CONFIGURE#########
  #############################

  #######detect cpu cores######
  CORES=$(cat /proc/cpuinfo | grep processor | wc -l)
  export CORES=1 #$(($CORES+1))
  #######mark conf as loaded#######
  export QGIS_ANDROID_CONF_LOADED=1
fi
